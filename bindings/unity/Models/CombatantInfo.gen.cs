// Generated by dojo-bindgen on Wed, 3 Jul 2024 22:32:26 +0000. Do not modify this file manually.
using System;
using Dojo;
using Dojo.Starknet;
using System.Reflection;
using System.Linq;
using System.Collections.Generic;
using Enum = Dojo.Starknet.Enum;

// Type definition for `core::integer::u256` struct
[Serializable]
public struct U256 {
    public BigInteger low;
    public BigInteger high;
}

// Type definition for `core::byte_array::ByteArray` struct
[Serializable]
public struct ByteArray {
    public string[] data;
    public FieldElement pending_word;
    public uint pending_word_len;
}

// Type definition for `core::option::Option::<core::integer::u32>` enum
public abstract record Option<A>() : Enum {
    public record Some(A value) : Option<A>;
    public record None() : Option<A>;
}


// Model definition for `blob_arena::models::combatant::CombatantInfo` model
public class CombatantInfo : ModelInstance {
    [ModelField("id")]
    public BigInteger id;

    [ModelField("combat_id")]
    public BigInteger combat_id;

    [ModelField("player")]
    public FieldElement player;

    [ModelField("collection_address")]
    public FieldElement collection_address;

    [ModelField("token_id")]
    public U256 token_id;

    // Start is called before the first frame update
    void Start() {
    }

    // Update is called once per frame
    void Update() {
    }
}
        