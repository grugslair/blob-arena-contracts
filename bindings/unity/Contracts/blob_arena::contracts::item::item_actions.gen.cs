// Generated by dojo-bindgen on Wed, 3 Jul 2024 22:32:26 +0000. Do not modify this file manually.
using System;
using System.Threading.Tasks;
using Dojo;
using Dojo.Starknet;
using UnityEngine;
using dojo_bindings;
using System.Collections.Generic;
using System.Linq;
using Enum = Dojo.Starknet.Enum;

// System definitions for `blob_arena::contracts::item::item_actions` contract
public class Item_actions : MonoBehaviour {
    // The address of this contract
    public string contractAddress;

    
    // Call the `dojo_init` system with the specified Account and calldata
    // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
    public async Task<FieldElement> dojo_init(Account account) {
        List<dojo.FieldElement> calldata = new List<dojo.FieldElement>();
        

        return await account.ExecuteRaw(new dojo.Call[] {
            new dojo.Call{
                to = contractAddress,
                selector = "dojo_init",
                calldata = calldata.ToArray()
            }
        });
    }
            

    
    // Call the `update_item` system with the specified Account and calldata
    // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
    public async Task<FieldElement> update_item(Account account, BigInteger id, string name, Stats stats, BigInteger[] attacks) {
        List<dojo.FieldElement> calldata = new List<dojo.FieldElement>();
        calldata.Add(new FieldElement(id).Inner);
		calldata.AddRange(ByteArray.Serialize(name).Select(f => f.Inner));
		calldata.Add(new FieldElement(stats.attack).Inner);
		calldata.Add(new FieldElement(stats.defense).Inner);
		calldata.Add(new FieldElement(stats.speed).Inner);
		calldata.Add(new FieldElement(stats.strength).Inner);
		calldata.Add(new FieldElement(attacks.Length).Inner);
		calldata.AddRange(attacks.SelectMany(attacksItem => new [] { new FieldElement(attacksItem).Inner }));

        return await account.ExecuteRaw(new dojo.Call[] {
            new dojo.Call{
                to = contractAddress,
                selector = "update_item",
                calldata = calldata.ToArray()
            }
        });
    }
            
}
        